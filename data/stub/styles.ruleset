; This is minimal styles ruleset. Replace <modpack> with your module name in
; description.

[datafile]
description="<modpack> nation theme data for Freeciv"
options="+Freeciv-ruleset-Devel-2017.Jan.02"
format_version=20

; /* <-- avoid gettext warnings
;
; Nation styles
;
; name          = translatable name as seen by user
; rule_name     = (optional) internal name for savegames, rulesets etc; if
;                 not present, "name" is used for this purpose too. Since
;                 the name used in savegames must not change, if you want
;                 to rename an item after a ruleset has been released, you
;                 should set "rule_name" to the original value of "name".
;
; */ <-- avoid gettext warnings

[style_generic]
name = _("?style:Generic")

; /* <-- avoid gettext warnings
;
; City styles define the way cities are drawn
;
; name             = translatable name as seen by user
; rule_name        = (optional) internal name for savegames, rulesets etc; if
;                    not present, "name" is used for this purpose too. Since
;                    the name used in savegames must not change, if you want
;                    to rename an item after a ruleset has been released, you
;                    should set "rule_name" to the original value of "name".
; graphic          = group of tiles to use, see cities spec for
;                    more info on city tiles
; citizens_graphic = group of citizens tiles to use, see citizens/small
;                    spec for more info on citizens tiles
;                    FIXME: this and _alt not currently used!
; reqs             = requirements for this city style (see README.effects)
;
; */ <-- avoid gettext warnings

[citystyle_generic]
name                 = _("?citystyle:Generic")
graphic              = "city.classical"
graphic_alt          = "-"
citizens_graphic     = "ancient"
citizens_graphic_alt = "generic"
reqs = { "type", "name", "range"
         "Style", "Generic", "Player"
       }

; /* <-- avoid gettext warnings
;
; Music styles
;
; Order is important. The last one for which activation requirements
; are fulfilled is the one that plays.
;
; music_peaceful = Music to play when nation in peaceful mood
; music_combat   = Music to play when nation in combat mood
; reqs		 = requirements to activate the style (see effects.ruleset
;		   and README.effects for help on requirements)
;
; */ <-- avoid gettext warnings

[musicstyle_generic]
music_peaceful     = "music_generic"
music_combat       = "music_generic"
reqs	=
    { "type", "name", "range"
    }
