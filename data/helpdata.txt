; Helpfile for Freeciv
;
; Each [help_*] is a help node.
;
; 'name' = name of node as shown in help browser; the number of leading
;          spaces in 'name' indicates nesting level for display.
;
; 'text' = the helptext for this node; can be an array of text, which
;	   are then treated as paragraphs.  (Rationale: easier to update
;	   translations on paragraph level.)
;
; 'generate' = means replace this node with generated list of game
;	       elements; current categories are:
;	          "Units", "Improvements", "Wonders", "Techs",
;		  "Terrain", "Extras", "Goods", "Specialists",
;                 "Governments", "Ruleset", "Tileset", "Nations"
;              As for 'name', the number of spaces before the category
;              name indicates nesting level for display.
;              Some types have additional arguments, for instance
;              "categories" for extras. See helpdata.c.
;
; Within the text, the help engine recognizes a few "generated table"s.
; These are generated by the help engine, and inserted at the point of
; reference.  They are referenced by placing a $ in the first column
; of a separate paragraph, followed immediately with the name of the
; generated table.  See the code in helpdata.c for the names of tables
; which can be referenced.
;
; This file no longer has a max line length: strings are wrapped
; internally.  However to do non-wrapping formatting, make sure to
; insert hard newlines "\n" such that lines are less than 68 chars
; long.
;  This marks 68 char limit -------------------------------------->|
;
; Notice not all entries are marked for i18n, as some are not
; appropriate to translate.
;
; Comments with c-style comments are just to stop xgettext from
; complaining about stray single-quote characters.

[help_overview]
; /* TRANS: "Overview" topic in built-in help */
name = _("?help:Overview")
text = _("\
Freeciv is a turn-based strategy game, in which each player becomes \
the leader of a civilization. You compete against several opponents to \
found cities, use them to support a military and economy, and finally \
to complete an empire that survives all encounters with its neighbors \
to emerge victorious. Each opponent may be either another human or be \
controlled by the computer. All players begin at the dawn of history \
with a handful of units -- typically with an explorer and a couple of \
settlers in 4000 BCE -- and race to expand outward from those humble \
beginnings.\
"), _("\
Achieving success requires a balance between economic expansion, \
military strength, and technological development. Not only must you \
develop all three in concert to both expand and successfully defend \
your empire, but any of the three may provide victory over your \
opponents:\
"), _("\
 - As in other games of conquest and expansion, you are declared the \
winner by default once the last city and unit of every other \
civilization is destroyed.\
"), _("\
 - Once technological progress has brought you into the space age, \
you may launch a spacecraft destined for Alpha Centauri; the \
first civilization whose craft reaches the system wins.\
"), _("\
 - In the absence of other means to determine victory, the game will \
end after 5000 turns if no spacecraft have yet been launched. The \
surviving civilizations are then rated, and the one with the highest \
score is the winner.\
"), _("\
A word of warning: Freeciv is highly customizable, both through \
run-time configuration and through custom rulesets which can change \
almost any aspect of the game rules. This help system tries to adapt \
to different rules, but may not completely cover rulesets which are \
very different from the classic rules.\
")

[help_strategy_and_tactics]
name = _("Strategy and Tactics")
text = _("\
While every game is different, there's a basic strategy which most \
players follow, especially at the start of the game.\
"), _("\
These steps may vary depending upon the server options, but in \
general, the steps are: \
"), _("\
 0. Choosing the first city site.\n\
 1. Mapping the countryside.\n\
 2. Defending the cities.\n\
 3. Deciding which units to build first.\n\
 4. Improving the land.\n\
 5. Deciding where to build cities.\n\
 6. Taking care of the cities.\n\
 7. Interacting with other players (diplomacy).\n\
 8. Exploring the world.\n\
 9. Things to keep in mind.\n\
10. Making your own strategy for the game.\n\
"), _("\
 0. Choosing the first city site.\
\n\n\
    Start the game by wandering around BRIEFLY to find a good place \
to build the first city.  Don't feel tempted to investigate any \
yellow-roofed villages yet - they might contain barbarian \
tribes.  Build the city close to resources and perhaps close to \
the sea.  Keep in mind that the city you build first will be \
your capital!  The idea is to balance the quality of the site you \
find against getting your first city established as early \
as possible.\
"), _("\
 1. Mapping the countryside.\
\n\n\
    After the capital city has been founded, it will start producing \
a warrior unit.  These units can be used to rove around \
exploring the countryside.  Remember, it is risky to leave a \
city undefended, so perhaps keep the first warrior in the city, \
and use the following one to explore.  If you started the game \
with an explorer unit, use that to explore, obviously!\
"), _("\
 2. Defending the cities.\
\n\n\
    At this point, defend your cities by always leaving a warrior \
unit in them.  As your civilization develops units with a \
greater defense strength, replace the obsolete units with new \
ones to ensure your cities have maximum defense.  The units most \
often used for defense are (in order of strength):  Warrior, \
Phalanx, Pikemen, Musketeers, and Riflemen.\
"), ; /* xgettext:no-c-format */
_("\
    Keep in mind that with some types of government, military units \
inside or outside cities can reduce or create unhappiness. \
Also remember that when a land unit is inside a city, it gets a 50% \
defensive bonus, as if fortified.  When a new city is built, \
the city starts to build the best available defensive unit from \
the above list.\
"), _("\
 3. Deciding which units to build first.\
\n\n\
    After building one or two Warrior units, start building Settlers.  \
Settlers take city population, but if you picked a good city site, \
your city should be big enough by now.  Settlers are best put to use \
founding new cities; while they can also build agricultural improvements \
(see the next section), it is better to use Workers for this when \
available, as unlike Settlers, Workers do not consume food from \
their parent city.  Keep in mind that a large population increases \
both the amount of productivity and your civilization's research \
rate, not to mention that cities secure land for your empire, \
so founding new cities should be a high priority initially.\
"), _("\
 4. Improving the land.\
\n\n\
    Each city has an area of land around it that can be used \
for growing food, producing goods, and generating trade.  This output \
can be increased by using Workers (or Settlers) to improve the land \
close to your cities.  The land can be improved with irrigation \
(increasing food), roads (allowing units to move faster and \
increasing trade), and mines (increasing production), among other \
improvements.\
"), _("\
 5. Deciding where to build cities.\
\n\n\
    The best location for a city is a matter of taste.  A city which \
is placed near the sea is easier to spot by opponents, but can \
also serve as a port for sea-going units.  (They also usually \
need a coastal defense later on.)  The best strategy is to build \
a few of both, but keep in mind that your opponents will find it \
harder to locate your city if you don't build it by the sea.\
"), _("\
 6. Taking care of the cities.\
\n\n\
    Every city has a band of citizens.  The number of citizens \
depends on the city's population.  When you click on a city, you \
can see how the land around the city is being used.  You can \
assign your citizens to the land, or they can be specialists that \
contribute to your civilization in other ways.  Especially at the \
start of the game, care should be taken to ensure that the citizens \
are employed so that they maximize growth, trade and production.\
"), _("\
    If too much food is being generated, a citizen can be taken off \
the land by clicking on the occupied land tile.  This \
citizen can then be transferred to the other duties mentioned \
previously.\
"), _("\
    If you move all of your citizens into the city and right-click \
on the central tile of the land, the citizens will be \
rearranged to maximize food production.\
"),
;     Above: probably some other AI maximization choice now  --dwp
_("\
    The golden rule of taking care of a city is that there should be \
at least as many happy citizens as unhappy citizens.  A city \
where this is not so falls into disorder; such cities are labeled \
with a raised fist or a lightning bolt (depending on the tileset).  \
Take care not to let this happen to any of your cities, as cities in \
disorder produce nothing, and are prone to revolt.\
"), _("\
 7. Interacting with other players (diplomacy).\
\n\n\
    When one of your units first meets a unit of another nation, or \
finds one of their cities (or equally if they find you), a basic \
contact is established between the two nations.  This provides each \
with basic intelligence about the other, which can be accessed from \
the 'Nations' report.\
"), _("\
    This communication will lapse after a set number of turns with \
no contact.  Establishing an embassy will give a more permanent \
communication channel, as well as more advanced intelligence such \
as details of technology.  Embassies are one-way - the nation \
hosting the embassy receives no benefit - and once established, \
cannot be revoked.\
"), _("\
    If you are in contact with another player, then you can arrange \
a diplomatic meeting.  From the 'Nations' report, this is done by \
clicking on the nation with whom you wish to meet and selecting \
'Meet'.  If the entry under the embassy column is not blank and the \
other player is connected (or is a server AI) then a treaty dialog \
will pop up.\
"), _("\
    In this dialog you can negotiate an exchange of assets (maps, \
vision, advances, cities, or gold), embassies, or binding pacts \
such as a cease-fire or peace.  There is no need to trade like for \
like; you can trade, say, an advance or city for gold - you can \
consider this buying and selling.  Each player builds a list of offered \
items.  To remove an item from the list, double-click on it.  \
When both players indicate satisfaction, the pact is concluded.\
"), _("\
    Pacts affect where your units can go and what they can do, \
and a pact with one nation can affect your relations with others.  \
Under authoritarian governments such as Monarchy you can break a \
pact at any time, but the representative governments (Republic and \
Democracy) have a senate which will block the unprovoked \
cancellation of a treaty; unless a foreign Diplomat or Spy sparks \
a diplomatic incident, the only way to dissolve a pact in this \
situation is to dissolve your government.  The details of pacts are \
described in the Diplomacy section.\
"), _("\
    A couple of notes:\
"), _("\
   - You can't give away your capital.\
"), _("\
   - You can only request property that you know about; so you \
can't request technology unless you have an embassy, and if \
you can't see a city on your map, then you can't request it.  \
Of course, the owner of that city can still offer it to \
you, in which case the area around the city is shown \
on your map before you accept the treaty.\
"), _("\
   - One important thing to note: when a city is transferred, \
any units in the field and supported by that city are also \
transferred (but not those sitting in other cities).  So make \
sure the other player isn't getting a better deal than you expect.\
"), _("\
 8. Exploring the world.\
\n\n\
    After you have fortified your cities with troops, build Triremes \
in the cities near the sea.  Use the Triremes to map the world \
in search of opponents and new lands.  If you are on an island, \
you should spend less on military and more on expansion.  Or if \
you are located close to an opponent, it is truly a good idea to \
make a peace treaty and share the advances you have made. \
Diplomatic units are very useful here, and WILL pay off later.\
"), _("\
 9. Things to keep in mind.\
\n\n\
  - What the next advance you'll need is.\
\n\n\
  - What your tax, luxury and research rates are currently set to.\
\n\n\
  - Treaties are often broken, so don't neglect defense...\
\n\n\
  - Some wonders can be made obsolete.\
"), _("\
 10. Making your own strategy for the game.\
\n\n\
    These basic concepts will allow you to play the game pretty \
well, especially in the beginning of the game.  But to improve, \
you need to study the various units and advances, and PRACTICE, \
PRACTICE, PRACTICE!  Freeciv has many twists, so if you haven't \
played a similar game before, try consulting the Freeciv WWW \
pages at:\
"), "\
  https://www.freeciv.org/\
", _("\
You'll find more tips for playing, and details of how to contact \
other players.\
")

[help_terrain]
name = _("Terrain")
text = _("\
Terrain serves three roles: the theater upon which your units battle \
rival civilizations, the landscape across which your units travel, and \
the medium which your cities work to produce resources. The different \
types of terrain each have different strengths and drawbacks; see the \
sections on each terrain type for details.\
"), _("\
Terrain affects combat very simply: when a unit is attacked, its \
defense strength is multiplied by the defense factor (\"bonus\") of the \
terrain beneath it. (However, some types of units do not enjoy this \
bonus; in the classic ruleset, only land units do.) See the help \
section on Combat for further details.\
"), _("\
Terrain can complicate the movement of units. For instance, in the \
classic ruleset, moving onto rough terrain such as Mountains can cost \
land units more than flat terrain like Plains, although sea and air \
units always expend one movement point to move one tile.\
"), _("\
Tiles within range of a city may be worked by that city to produce \
food, production, and trade points, and the quantity of each produced \
depends on the terrain. These three products are so important that we \
specify the output of a tile simply by listing them with slashes in \
between: for example, \"1/2/0\" describes a tile that each turn when \
it is being worked produces one food point, two production points, and \
no trade points. In addition to the characteristic output of the \
terrain, some tiles have an additional special resource that boosts \
one or two of the products. See the Economy section for more \
information on the use of these products.\
"), _("\
The net benefit of a tile for your city depends on your government \
type as well as city improvements and wonders.\
"), _("\
It is possible for your units to change the terrain and hence its \
effects; see the section on Terrain Alterations for more details.\
")

[help_gen_terrain]
generate = " Terrain"

[help_gen_natural_extras]
generate = " Extras"
categories = "Natural"

[help_resources]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Resources")
text = _("\
Tiles can have natural resources in addition to their base terrain.\
")

[help_gen_resource_extras]
generate = "  Extras"
categories = "Resource"

[help_terrain_alterations]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Terrain Alterations")
text = _("\
Certain units have the ability to alter terrain tiles in several \
ways: they may add or remove tile improvements, remove unwanted \
features such as pollution, or change the base terrain type entirely.\
"), _("\
Tile improvements typically provide some lasting bonus for as long as \
they are present, such as a production bonus when a city works the \
tile. Roads or paths typically ease movement, if they connect to a \
similar road on an adjacent tile, and bases often provide protection \
and refueling. The available tile improvements are described in the \
following sections.\
"), _("\
Improvements can be built by issuing one of several orders to a suitable \
unit while on a suitable tile: \"mine\", \"irrigate\", \"road\", or \
\"build base\" (although whether the order builds an improvement of the \
same name is up to the ruleset). Terrain alterations can also be \
requested from the city map (see the help on Cities).\
"), _("\
Terrain can sometimes be permanently converted into a type more suitable \
to the player's needs, although this usually takes longer than adding \
an improvement. Converting terrain from one type to another in this way \
may destroy existing improvements, if the new terrain is unsuitable, and \
may also remove access to special resources if they were specific to \
the original terrain type.\
"), _("\
The requirements for terrain conversion are set by the ruleset. \
It can be initiated in several ways:\
"), _("\
 - By issuing \"irrigate\" or \"mine\" orders when on terrain unsuitable \
for tile improvements.\
"), _("\
 - By issuing the special \"transform\" order. This often causes more \
radical transformations.\
"), _("\
In some rulesets, units can even reclaim land from water tiles, and \
similarly land can be transformed to water, although such radical \
transformations may require a certain number of surrounding tiles to \
already be land or water respectively. Terrain-altering units that \
cannot reach the existing terrain may have to be loaded onto a \
suitable vessel, and if necessary and possible, they will move to \
safe neighboring tiles when the conversion is complete.\
"), _("\
Units may also be able to destroy terrain alterations, by pillaging; \
typically more kinds of unit can pillage an improvement than \
could build it in the first place. Some tile features can only be \
removed by specialized units, with the \"clean\" order.\
"), _("\
Terrain conversions cannot be undone in this way; for example, in the \
classic ruleset, if a Forest tile has been irrigated to convert it into \
Plains, you cannot convert it back into a Forest by pillaging -- to do \
so, you would have to convert the tile again with a suitable unit.\
"), _("\
The time it takes a unit to alter terrain depends on its movement rate. \
The following table shows the number of turns required for a unit \
with 1 movement point to complete an activity; these numbers are \
reduced for units with faster move rates (such as Engineers in the \
classic ruleset). The time taken can be reduced further by several units \
working together as a team; if two or more units are working on the same \
task on the same tile, their efforts will be added together each turn \
until the task is finished. Be careful not to dedicate too many units \
to one task, though; excess effort can be wasted, and groups of terrain \
improving units are often vulnerable to enemy attacks.\
"), "\
$TerrainAlterations\
"

[help_gen_extras]
generate = "  Extras"
categories = "Infra"

[help_gen_misc_extras]
generate = " Extras"
categories = "Bonus", "Nuisance"

[help_borders]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" National Borders")
text = _("\
If enabled on the server, each nation has borders, which can be seen \
as dotted lines on the map. Borders determine what land your citizens \
can work and where you can found new cities, and whether your units \
are considered to be aggressively deployed by your citizens (see the \
section on Happiness). Borders also come into play when there is a \
diplomatic pact between nations (see the section on Diplomacy).\
"), _("\
Founding a city establishes a claim on an area of land around the \
city. In the classic ruleset, once claimed, a tile that can be directly \
worked by a city can not change ownership unless the city does (or is \
destroyed). However, the ownership of land that is out of range of any \
city can change depending on factors such as the relative size of nearby \
nations' cities. Other rulesets may differ in which, if any, tiles are \
permanently claimed by a city.\
"), _("\
Normally borders extend into water only for tiles adjacent to a city; \
beyond that, only narrow inlets and inland lakes can usually be \
claimed. Some rulesets may allow water tiles to be claimed as easily \
as land tiles in some circumstances, although the classic ruleset does \
not. Border claims can never extend to remote islands.\
"), _("\
Bases can also extend national borders. See the help on Terrain \
Alterations for more details.\
")

[help_economy]
name = _("Economy")
text = _("\
The products which your cities extract from the surrounding terrain \
are the fountain from which your civilization is watered. There are \
three types of products: food points, production points, and trade \
points. The following sections describe each of these resources along \
with its properties, uses, and limitations.\
")

[help_food]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Food")
text = _("\
Your population needs food to survive. Each citizen requires two food \
points per turn; in addition, some units (such as Settlers in the \
classic ruleset) may require food points from the city supporting \
them.\
"), _("\
Every city has a granary for storing food points (the building called \
a Granary in the classic ruleset only enhances this capability). \
Cities producing more food than they require accumulate the surplus in \
their granary, while those producing less than they require deplete \
their granary. When food is needed but none remains, the city \
population starves, killing food-consuming units first, followed by \
citizens, until the food deficit ends.\
"), _("\
Excess food can increase the population: the city granary has a \
limited capacity, and once full the city grows by one citizen and the \
granary starts again at empty. But since granary capacity increases \
with population, each citizen is more costly than the last, making \
this mode of growth important only for small cities. (An alternative \
way for cities to grow is \"rapture\", described in the section on \
Happiness.)\
")

[help_production]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Production")
text = _("\
Production points (also known as \"shields\") represent manufacturing \
output. In the classic ruleset, most units require production points \
as upkeep, and demand them from their home city, although under \
autocratic regimes each city supports a few units for free. If city \
production drops too low, the units that cannot be supported are \
automatically disbanded. You can also disband most types of unit at \
any time. If a unit is disbanded while in a city, half of its production \
cost will usually be put towards that city's surplus.\
"), _("\
Production points in excess of any required by the city's units are \
put towards whichever unit, building, or wonder has been selected as \
the city's current product. Just as food points accumulate in the city \
granary and yield a citizen when it reaches full, so production points \
accumulate until the cost of the product has been achieved. Products \
appear in their city when complete -- units appear on the map while \
improvements and wonders are added to their city's list of structures. \
Any leftover production points remain available to be applied towards \
the next project.\
"), _("\
Some units, such as Settlers, are built from city population as well \
as production points; the city size will reduce when the unit is built. \
By default, a city will not finish building a unit that would take \
all of the city's remaining population; in this case, production points \
will continue to accumulate until the city is of sufficient size. You \
can allow a city to be disbanded from the city's dialog; however, you \
cannot disband your last city this way.\
"), _("\
In the classic ruleset, a city can build at most one product per turn, \
regardless of its production surplus. However, in some rulesets, \
factors such as city size and technology may enable a single city to \
produce more than one unit in a single turn under certain conditions. \
A city with multiple \"build slots\", ordered to build a unit, can build \
as many of that single kind of unit per turn as its production surplus \
allows, up to the number of slots. Units which cost city population to \
build are an exception to this rule; they can only be built singly, as \
can buildings.\
"), _("\
A city can be given a list of several products to build in its \
\"worklist\", avoiding the need to pay attention to it every few \
turns. Each item on the worklist represents a single product (such as \
a unit); the city will work through them in order. When a city has \
finished all the work you have given it to do, it will try to build \
the last item again if possible, otherwise it will choose a new target \
itself. If a city is currently producing gold (building Coinage in the \
classic rules), an activity which never completes, putting an item on \
its worklist will cause it to stop producing gold and start working on \
the new item next turn. In rulesets which permit it, a city may take \
several units of the same type off its worklist in a single turn, but \
if a different kind of item is reached, production pauses until the \
following turn. This can be used to limit the number of units produced \
by highly productive cities.\
"), _("\
Each player is free to build any products that their technology has made \
available, with a few restrictions; see the sections on Units, City \
Improvements, and Wonders of the World for more information. Be \
careful -- the game even gives you the freedom to produce units you \
cannot support and buildings whose upkeep you cannot afford, both of \
which will be disbanded immediately after completion.\
"), _("\
You can always change the product on which a city is working, though \
you lose half of the accumulated production points when switching from \
a building, unit, or wonder to a product from one of the other two \
categories. You can spend gold to complete a project in one turn by \
hitting the Buy button on the city dialog.\
"), _("\
Some production points may be lost to waste, although there is no \
waste in the classic rules. Waste can result in your cities not \
building anything.\
"), _("\
Cities with a large production output contribute to pollution, which \
affects the tiles around the city. See the Terrain help.\
")

[help_trade]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Trade")
text = _("\
Trade points reflect wealth generated in each city by external \
commerce. Some trade points may be lost to corruption, which varies \
among forms of government, and tends to increase with distance from \
your center of government. Each city distributes its remaining trade \
points among three uses: gold, in the form of taxes, goes into your \
national treasury; luxury points influence citizen morale; and \
science points (\"bulbs\") contribute towards the discovery of new \
technology.\
"), _("\
You must choose a single ratio for your civilization by which trade \
points are distributed among these three uses. Though you may alter \
the tax rates on any turn, you are constrained to multiples of ten \
percent, and most forms of government limit their maximum value.\
"), _("\
Having this single ratio does not impact gold and science, because \
gold and technological progress are both empire-wide tallies. Luxury \
is more problematic, however, because its effect is local -- it affects \
only the city producing it. Thus, while it would be convenient for \
unhappy cities to invest all their trade in luxury while others \
invested in science or taxes instead, you will instead have to \
compromise among the needs of all your cities (although there may be \
ways to make local adjustments, such as assigning citizens as \
entertainers in the classic ruleset). See the section on Happiness \
for more details on the effect of luxuries.\
"), _("\
Besides working terrain gifted with rare commodities, or logistical \
benefits such as waterways or roads, you can increase trade by \
using units to establish permanent trade routes between two cities, \
if the ruleset allows it.\
"), _("\
The ruleset may limit the ability to trade or the yield from doing so \
depending on whether the two cities are on different continents and/or \
in different nations; for international trade routes, on the diplomatic \
status of the two trade partners; and for domestic routes, there must be \
a minimum distance between the two cities, controlled by the \
'trademindist' server option (default nine tiles).\
"), _("\
A trade route is established when a suitable unit (in the classic \
ruleset, a Caravan or Freight unit) enters an eligible city. For your \
own or allied cities, you need to issue the \"Establish Trade Route\" \
command. This creates a trade route between the unit's home city (which \
might be different from the city that originally produced it) and the \
destination.\
"), _("\
Depending on the ruleset, the origin civilization of the unit may \
gain immediate revenue in gold, science, or both from selling its \
trade goods at the destination city. The initial revenue depends on \
the trade already produced by the two cities involved and their \
distance apart. The destination civilization learns about \
the location of the origin city, if it is not already known.\
"), _("\
The ongoing trade route that is established benefits both its \
origin and destination cities equally by generating trade points for \
each city every turn. The amount of ongoing trade increases with the \
size of each city and the distance between them, and may also depend on \
the factors mentioned above. The trade relationship also gives each \
civilization limited ongoing intelligence about the partner city. \
If a trade route ever becomes unsustainable -- for instance, if war \
breaks out in a ruleset where enemies cannot trade -- it may be \
permanently canceled.\
"), _("\
Each city can only support a limited number of trade routes (the exact \
limit is set by ruleset and circumstance). If you attempt to establish \
more, the trade route with the smallest ongoing revenue is canceled if \
it would be less than the new route. (Otherwise, the origin civilization \
can still gain initial revenue by entering the marketplace and selling \
trade goods, but it is reduced to a third.)\
"), _("\
This limit is enforced only when attempting to establish a new route. If \
you temporarily lose the ability to establish as many trade routes as a \
city already has, existing ones are not affected.\
"), _("\
Beware: in rulesets where plague is enabled, it can travel \
along trade routes. See the section on Plague for more details.\
"), _("\
To view the current trade routes of a city, click and hold over the \
Trade: line in the Overview tab in the city view.\
")

[help_goods]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Goods")
text = _("\
Goods are carried via trade routes.\
")

[help_gen_goods]
generate = "  Goods"

[help_cities]
name = _("Cities")
text = _("\
Cities are your sole instrument for developing natural resources and \
channeling them toward expansion, technological progress, and warfare.\
"), _("\
A city is created when Settlers are given the \"build city\" command \
on suitable terrain, removing the unit from play to provide the city \
with its first citizens. A city may grow to include dozens of citizens, \
some working within the city while others are dispatched as new \
settlers. Famine, war, and plague kill citizens and reduce population; \
with the loss of its last citizen a city disappears (in the classic \
ruleset, this can leave ruins, although these have no effect on \
gameplay).\
"), _("\
While city growth should usually be your aim, it comes with challenges. \
As cities grow, managing happiness becomes a problem; this is described \
in its own section. Depending on the ruleset, pollution (described in \
the Terrain help), plague, and migration can also be issues.\
"), _("\
Each city may work the terrain within its reach. In the classic ruleset, \
this is a fixed radius of approximately three tiles, giving access to \
20 tiles on rectangular maps, or 18 tiles on hexagonal ones, in addition \
to the city center tile. In other rulesets it may be different, and may \
vary depending on factors such as the size of the city and known \
technologies.\
"), _("\
To extract resources from a tile, you must have a citizen working \
there. You cannot begin working a tile which a neighboring \
city is already working, nor can you work terrain upon which an enemy \
unit is standing, or terrain inside another player's borders. Thus you \
can simulate conditions of siege by stationing your units atop \
valuable resources around an enemy city. Units can also be ordered to \
pillage, which damages improvements. Worker units could even transform \
the terrain to make the tile less productive.\
"), _("\
The section on Terrain describes how the output of each tile is \
affected by the terrain, the presence of special resources such as \
game or minerals, and tile improvements built by units. Note that the \
tile on which the city itself rests -- the city center -- gets worked \
for free, without being assigned a citizen. The city's tile may also \
receive other benefits. In the classic ruleset, it always produces at \
least one food and one production point regardless of terrain; gains \
whatever advantages the terrain offers with an irrigation system \
(because cities come with water systems built-in); and is usually \
developed with roads. Other rulesets may differ in detail.\
"), _("\
The roles of citizens are controlled from the City dialog. Citizens \
working the land are represented by three numbers showing their output \
on the tile they are working. Clicking on these numbers will remove \
the citizen from the tile, turning them into a specialist (see the \
section on Specialists for more details); this can be seen in the \
row of citizen icons. You can click another tile to assign the citizen \
to work it, or click on the specialist icon to change their specialist \
role.\
"), _("\
Clicking on the city center tile in the city map will automatically \
choose citizen roles and tiles to work, with an emphasis on food \
production and hence growth. Citizen roles are also automatically \
assigned when a city grows; you may want to inspect cities that have \
just grown and adjust the role in which the new citizen has been \
placed. You can set different priorities for a city with the Citizen \
Governor; see its help section.\
"), _("\
You can also request tile alterations from the city map, as an \
alternative to explicitly instructing units to make them. In clients \
which support it, right-clicking on a city map tile gives a menu of \
changes which can be made to that tile, such as irrigation and \
building roads (see the section on Terrain Alterations); you can \
select one improvement per tile at a time. These 'worker tasks' will \
be carried out by any units capable of them that are in 'auto settler' \
mode.\
"), _("\
Citizens have a nationality distinct from that of the state they \
inhabit. When a city grows due to food surplus, new citizens take \
the nationality of the city's current owner, but when a city is \
conquered or otherwise transferred, its citizens retain their \
original nationality, as do any immigrants. Units founding or \
contributing citizens to a city can also bring their own nationality.\
"), _("\
Citizens of another nationality will work in your cities just the same \
as your own, and behave the same in most respects, but they may become \
unhappy when you are at war with their associated state; their presence \
makes it cheaper for their state's agents to incite revolt in your \
cities; and if migration is enabled, they have an increased tendency to \
migrate to their state's cities. Over time, citizens may be assimilated \
into their home city, depending on ruleset settings.\
"), _("\
Some rulesets do not have nationality; in this case, citizens always \
consider their nationality to be that of their home city. \
If nationality is enabled, you can see the cultural makeup of your \
cities and any consequent effects on happiness in the City dialog, \
on the Happiness tab.\
"), _("\
Cities may be enhanced with a wide variety of buildings, which can \
improve their productivity, their military strength, or give them \
new abilities. See the sections on City Improvements and Wonders of \
the World for more information.\
")

[help_specialists]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Specialists")
text = _("\
The first citizens of each city usually work the land, each toiling to \
yield up the resources of one terrain tile. However, there may be \
other specialist roles citizens can assume; in fact, taking another \
role is the only way they can stop working. A city may outgrow the \
land available for it to work, in which case some citizens must become \
specialists.\
"), _("\
All specialists enjoy enough privilege to remain perpetually content -- \
they do not contribute to unhappiness or to celebration. See the \
section on Happiness for more details.\
"), _("\
This section describes the available specialist roles, their effects, \
and their requirements, if any.\
")

[help_gen_specialists]
generate = "  Specialists"

[help_happiness]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Happiness")
text = _("\
Keeping your citizens happy (or at least content) is one of the most \
important objectives in Freeciv. When your citizens become unhappy, \
your cities will fall into disorder, which disrupts production; but \
when your citizens are happy, your cities will celebrate, and your \
production will increase greatly. (If migration is enabled, happiness \
also affects the relative desirability of cities; see the section on \
Migration for details.)\
"), _("\
Each citizen working the land is either happy, content, unhappy, or \
angry. The normal state of a working citizen is contentment. However, \
as your cities grow larger, crowding causes citizens to become \
unhappy. In the classic rules, each citizen in a city after the fourth \
will be generated unhappy, instead of content.\
"), _("\
If the number of unhappy citizens in a city exceeds the number of \
happy citizens, the city falls into disorder. A city in disorder \
produces no food or production surplus, science, or taxes; only luxury \
production remains. Cities which are in disorder are also easier for \
enemy agents to incite to revolt. Prolonged disorder under certain \
governments can lead to a spontaneous national revolution, \
overthrowing your government.\
"), _("\
It should be stressed that only citizens working the land vary in \
morale -- specialists enjoy enough privilege to remain perpetually \
content (see the section on Specialists). Thus one solution to the \
problem of an unhappy citizen is simply to assign that citizen to \
the role of a specialist. But if cities are ever to work more than \
four terrain tiles at once, the problem of morale must be confronted \
more directly.\
"), _("\
There are many ways of making unhappy citizens content, which does \
prevent disorder but is without further benefit. Producing happy \
citizens can balance the effect of unhappy citizens and also bring other \
benefits.\
"), _("\
Cities that are sufficiently large celebrate when at least half their \
citizens are happy and none remain unhappy. The effects of celebration \
vary; in the classic ruleset, they depend on your government type:\
"), _("\
 - Under Anarchy or Despotism, you will not suffer the normal \
production penalty for tiles which produce more than 2 points of \
any resource (food, production, or trade).\
"), _("\
 - Under Monarchy or Communism, your city will gain the trade bonus \
of Republican/Democratic governments: 1 bonus trade point in any tile \
which already produces at least 1 trade.\
"), _("\
 - Under a Republic or a Democracy, your city will enter \"rapture\": \
its population will increase by 1 each turn until there is no excess \
food or until the number of happy citizens is no longer sufficient for \
celebration. Without rapture, large cities can grow only by struggling \
to produce a food surplus -- which can be difficult enough -- and then \
waiting dozens of turns for their granary to fill.\
"), _("\
In small empires, as already stated, the fifth citizen in each city is \
the first unhappy one. As you gain more cities, this limit actually \
decreases, to simulate the difficulty of imposing order upon a large \
empire. The precise thresholds depend on government type; see the \
section on Government for details.\
"),
; See content_citizens() in server/citytools.c.
_("\
Thus, you may find that founding or conquering a city triggers \
widespread disorder across your empire. Continued empire growth may \
lead to further penalty steps. In empires that grow beyond the point \
where no citizens are naturally content, angry citizens will appear; \
these must all be made merely unhappy before any unhappy citizens can \
be made content, but in all other respects behave as unhappy citizens.\
"),
; Behaviour of angry citizens is actually a bit more complicated than
; this. See city_refresh_from_main_map() in common/city.c.
_("\
Luxury makes citizens happy. For every two luxury points a city \
produces, one content citizen is made happy (if there are no content \
citizens left, unhappy citizens become content then happy). Each city \
receives back some of the trade points it produces as luxury points \
according to your empire's tax rates; see the section on Trade. Luxury \
points may also be produced by other means, such as entertainer \
specialists in the classic ruleset.\
"), _("\
There are several city improvements that will make content those \
remaining citizens that are unhappy due to crowding, such as Temples \
and Colosseums in the classic rules. Some wonders of the world can \
also have this effect. See the appropriate sections for details.\
"), _("\
Military units can affect city happiness. Under authoritarian regimes \
this is helpful, as military units stationed in a city can prevent \
unhappiness by imposing martial law. However, under representative \
governments, citizens become unhappy when their city is supporting \
military units which have been deployed into an aggressive stance. \
This includes units not inside your national borders, a friendly city \
(including the cities of your allies), or a suitable base within three \
tiles of a friendly city; however, certain units (\"field units\") \
are inherently aggressive and cause unhappiness regardless of \
location.\
"), _("\
If you are at war with a civilization and some of your citizens are \
of that nationality, those citizens may also become unhappy.\
"), _("\
These forms of unhappiness are distinct from that caused by overcrowding, \
and cannot be offset by luxuries, or by most city improvements. In \
the classic ruleset, Police Stations and the Women's Suffrage wonder \
can offset unhappiness caused by units, and only a few wonders -- \
such as J.S. Bach's Cathedral -- can offset any kind of unhappiness, \
even that caused by military or diplomatic tensions.\
"), _("\
The Happiness tab on the city dialog will give detailed insight into \
the mood of the citizenry and its causes.\
")

[help_plague]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Plague")
text = _("\
Plague is a ruleset option, and is not enabled in the classic \
ruleset.\
"), _("\
When plague strikes a city, its population is reduced by one. Unless \
action is taken to reduce the risk of plague, this tends to act as a \
natural limit on city size. Rulesets which enable plague will \
typically have city improvements or other means to reduce the risk of \
plague.\
"), _("\
The risk of plague depends on city size (overcrowding leads to \
insanitary conditions) and on the pollution generated in a city. Also, \
plague can spread via trade routes (without regard for nationality); \
after a city has been struck by plague, it will remain infectious to \
its trade partners for several turns, increasing the risk of plague in \
those cities by a factor depending on the size of both cities.\
"), _("\
If migration is enabled, citizens will tend to prefer cities with a \
lower risk of plague.\
")

[help_migration]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Migration")
text = _("\
Migration is the movement of citizens from one city to another based \
on the relative attractions of living in each city. Whether migration \
is enabled is controlled by the server option 'migration'; it is \
disabled by default.\
"), _("\
When migration is enabled, every few turns, a citizen of each city in \
the game may migrate to a nearby, more attractive city, either within \
the same nation or even across national borders (to a lesser extent, \
by default).\
"), _("\
You cannot directly prevent or direct the migration of citizens. \
However, you can influence the attractiveness of your cities. The \
following factors affect the perceived desirability of each city, in \
approximately decreasing order of importance. (Each factor counts for \
much more in the citizen's current city, as they prefer not to move \
without a compelling reason.)\
"), _("\
 - City size.\
"), _("\
 - The number of happy citizens. (To a lesser extent, unhappy and \
angry citizens reduce the desirability of a city.)\
"), _("\
 - In rulesets where nationality is enabled, citizens have a strong \
preference to move to cities of their own nationality.\
"), _("\
 - The presence of any wonder in a city will greatly increase its \
desirability (further wonders do not contribute except by the lesser \
effect of their build cost).\
"), _("\
 - Capital cities are more attractive than other cities, all other \
factors being equal; in addition, citizens will never migrate out of a \
capital city.\
"), _("\
 - A high risk of plague reduces a city's attractiveness.\
"), _("\
 - Food surplus. (A food deficit reduces the desirability of a city.)\
"), _("\
 - Cities that are further away are less desirable. The absolute \
maximum distance that a citizen is prepared to migrate is controlled \
by the server option 'mgr_dist'.\
"), _("\
 - Trade surplus.\
"), _("\
 - Luxury and science output.\
"),_("\
 - The quantity of city improvements (and wonders), measured by build \
cost.\
"), _("\
 - Depending on the ruleset, a number of other factors such as \
government type and city improvements may increase or decrease the \
desirability of cities; these are noted in other sections of the help. \
(The classic ruleset contains no such effects.)\
"), _("\
Citizens will not migrate to cities which cannot increase in size to \
support them, for instance due to lack of a city improvement such as \
an Aqueduct. If the server option 'mgr_foodneeded' is set, they will \
not migrate to cities which would not have enough food to support them.\
"), _("\
Migration can even cause cities to be completely abandoned (ownership \
of any units being transferred to your nearest remaining city). \
However, cities with wonders will never be disbanded (so the wonder \
will not be destroyed), and the last citizen from your only remaining \
city will never migrate to another nation.\
"), _("\
Several of the details of migration can be changed with the 'mgr_*' \
server options.\
")

[help_city_improvements]
name = _("City Improvements")
text = _("\
Cities may be improved with a wide variety of buildings, each with a \
different effect. Each city may have only one of each improvement, and \
some improvements require others to have been built first.\
"), _("\
It costs production points to build improvements, and once completed, \
many improvements require an upkeep of one or more gold pieces per \
turn. You may dismantle and sell an improvement, receiving one gold \
piece for each production point used in its construction, although you \
may only sell one improvement per city per turn. If a turn comes on \
which you cannot pay the upkeep on all of your improvements, some of \
them will be automatically sold; obviously this should be avoided as \
the improvements chosen might not be ones you would have preferred to \
sell.\
"), _("\
Most improvements become available only when you achieve certain \
technologies, and some improvements can become \
obsolete, at which point they are automatically sold.\
")

[help_gen_improvements]
generate = " Improvements"

[help_wonders_of_the_world]
name = _("Wonders of the World")
text = _("\
Wonders are special buildings which can each be completed by \
only one player each game, and which often enhance their entire \
civilization. Unlike ordinary city improvements, which must be built \
with local production points, certain special units built in one city \
(Caravans and Freight in the classic ruleset) can contribute their \
full cost in production points towards the construction of a wonder in \
another city.\
"), _("\
Once built, a wonder is placed in the city that constructed it, and \
cannot be sold or destroyed (unless the entire city is destroyed). \
However, some wonders are made obsolete under certain, \
ruleset dependent, circumstances, and lose their effect. \
Note the asymmetry under many rulesets: while you must personally \
achieve the advance required by each wonder to build it, it will be \
disabled when any player achieves the obsoleting advance.\
")

[help_gen_wonders]
generate = " Wonders"

[help_units]
name = _("Units")
text = _("\
Units provide both the mobility your civilization needs, and the violence \
with which it will survive and expand. The available units may be \
classified as military units, whose talents are those of defense and \
aggression, and a few noncombatants which support expansion, \
diplomacy, and trade.\
"), _("\
Units are usually built in cities using production points. Once built, \
units are owned by the city that built them (although they can later \
be re-homed while visiting a different city) and demand support from \
that city; this will be one of your major expenses. Most units require \
upkeep such as production points from their home city every turn, \
although some autocratic styles of government can force cities to \
support several units for free. If the upkeep of a unit outweighs its \
benefit, you can disband it; see the section on Production. A few \
units, particularly those that you start the game with, have no home \
city and thus require no upkeep.\
"), _("\
Most units begin every turn with one or more movement points. Every \
action undertaken by a unit consumes movement points.\
"), _("\
The most basic action is movement; units can move into any of the \
tiles surrounding their current location, subject to restrictions \
imposed by their physical nature (the terrain they are 'native' to), \
by diplomatic obligations (see the section on Diplomacy), and by \
enemy units (see the section on Zones of Control). The number of \
movement points consumed may depend on the type of terrain; see \
the Terrain help.\
"), _("\
A unit cannot move onto a tile occupied by an enemy unit, and when \
directed to do so will attack instead (if capable of attack), locking \
the two units in combat until one is destroyed. The outcome depends on \
the attributes of the units in question (hit points, attack and \
defense strength, and firepower); the Combat section describes the \
process in detail, and the following sections list specific units' \
attributes.\
"), _("\
Units' attributes can be further boosted by being veteran. Units may \
be built as veteran by means of certain city improvements or other \
influences; once built, units can also become veteran through \
experience (such as surviving combat), which may provide further \
levels of bonuses beyond those available from their initial training.\
"), "\
$VeteranLevels\
", _("\
Units which have been damaged in combat will regain hit points each \
turn in which they are not moved. Normally, a unit which has not \
moved will regain one hit point per turn. Units which are fortified \
gain an extra hit point. A unit which spends a turn in a city \
regains one third of its base hit points, and city improvements \
appropriate to the unit type can improve this further. In the field, \
bases on tiles can improve the recovery rate (for instance, fortresses \
in the classic ruleset have this effect); units must stay on the tile \
for a whole turn to get this recovery bonus. Wonders can also boost \
recovery (such as the United Nations in the classic ruleset). Damaged \
units in Sentry mode will wake up when they have regained all of their \
hit points.\
"), _("\
As technology advances, new types of units become available which \
obsolete existing types. When you discover such a new technology, \
your existing units remain intact, but you can no longer build \
new units of the obsolete type. While an obsolete unit is in one \
of your cities, you can choose to upgrade it to the latest equivalent \
by spending gold, with the cost increasing with the difference in \
production point cost between the two types. When a unit is upgraded, \
its hit points and movement points are preserved as a fraction of \
the total; however, in some rulesets (but not the classic rules) \
it will lose some or all of its veteran levels.\
")

[help_gen_units]
generate = " Units"

[help_combat]
name = _("Combat")
text = _("\
In standard combat, when one unit attacks another unit, either the \
attacker will be destroyed, or the defender will be destroyed -- \
never both (unless the attacker was a missile).\
"), _("\
(In some rulesets, certain units sometimes use a different style of \
attack called 'bombardment', which works rather differently: the \
attacker sustains no damage, and damages every unit in the target \
tile or city, but defenders are never completely destroyed.)\
"), _("\
The outcome of combat depends on several factors, including chance.\
"), _("\
The description below is for the classic ruleset, and does not match \
exactly current default ruleset, civ2civ3. The principles \
are similar for any ruleset. Notice that many bonuses are possible \
for defenders, but few for attackers, aside from veteran status; an \
attacking unit can mostly expect circumstance to work against it.\
"),
; base_get_attack_power()
_("\
First, the attacker's strength is modified.\
"), _("\
 - If the attacker is a veteran, its strength is multiplied by the \
bonus associated with its veteran level.\
"), _("\
 - Some rulesets (but not the classic rules) have 'tired attacks': \
a unit that attacks with less than a full movement point will have \
its strength proportionally reduced.\
"),
; get_defense_power(), base_get_defense_power(), defense_multiplication()
_("\
Next, the defender's strength is modified.\
"), _("\
 - If the defender is a veteran, then its strength is multiplied by \
the bonus associated with its veteran level.\
"),
; "TerrainDefense" unit class flag
_("\
 - Then the defender's strength is multiplied by the defense factor \
of the terrain it occupies.\
"),
; hardcoded in defense_multiplication(); unit "CanFortify" / "Cant_Fortify"
_("\
 - If the defender is fortified, or is of a type that could fortify \
and is inside a city, its strength is multiplied by 1.5.\
"), _("\
 - Ruleset-specific bonuses are applied:\
"),
; "DefenseMultiplier" combat bonus
_("\
   - The defender's strength is doubled if it is a Pikeman unit \
defending against a mounted unit.\
"),
; "DefenseMultiplier" combat bonus
_("\
   - If the defender is an AEGIS Cruiser defending against airborne \
units (including missiles and Helicopters), the defense is \
quintupled.\
"),
; "Defend_Bonus" effect
_("\
   - The defender's strength is doubled again if it is in a city with \
a SAM Battery and the attacker is an air unit (other than a \
Helicopter or a missile).\
"),
; "Defend_Bonus" effect
_("\
   - An SDI Defense doubles the defender's strength against \
missile attacks.\
"),
; "Defend_Bonus" effect
_("\
   - If the attacker is a ship and the defender is in a city with a \
Coastal Defense, the defender's strength is doubled.\
"),
; "Defend_Bonus" effect
_("\
   - Against land units (other than Howitzers) and Helicopters, \
defending units in a city with City Walls have their strength \
tripled.\
"),
; defense_bonus of the extra
_("\
   - If the defender is in a fortress (and not a city), its strength \
is doubled.\
"),
; "DefenseDivider" combat bonus
_("\
   - Finally, if the attacker is a fighter and the defender is a \
helicopter, the defender's strength is halved.\
"), _("\
If, after these modifications, the attacker has a strength of 0, it \
automatically loses. Otherwise, if the defender has a strength of \
0, the defender loses.\
"),
; get_modified_firepower()
_("\
The firepower of the attacker and defender are also modified.\
"),
; "BadCityDefender" unit type flag
_("\
 - If the defender is a ship and is inside a city the firepower of \
the attacker is doubled and the firepower of the ship is set to 1.\
"),
; "LowFirepower" combat bonus
_("\
 - If a fighter is attacking a helicopter the firepower of the \
helicopter is set to 1.\
"),
; Hardcoded in get_modified_firepower()
_("\
 - If neither unit could move to where the other is, such as a ship \
attacking a land unit on land, the firepower of both is set to 1.\
"), _("\
After these preliminaries, combat occurs, as long as both units are \
still alive (i.e., hit points are greater than 0). Each round, a \
random number between 1 and the sum of the attacker's and defender's \
strengths is generated. If this number is greater than the \
defender's strength, the defender loses hit points equal to the \
attacker's firepower. Otherwise, the attacker loses hit points \
equal to the defender's firepower. The first unit to reach 0 hit \
points (or negative hit points) loses.\
"),
; /* Actually, that's a little white lie.  The random number is really
; from 0 to (A+D-1), and the comparison is ">=D", not ">D".  The
; odds are the same both ways, but I think my explanation may be a
; little simpler for non-programmers who may be reading this. */
; /* xgettext:no-c-format */
_("\
Whichever unit survives the fight has a chance of being promoted \
a veteran level. In the classic ruleset, if the winner's \
civilization has the Sun Tzu's War Academy (and if it isn't \
obsolete), the chance is increased by half in case of land units.\
"),
; "KillCitizen" unit class flag, "Unit_No_Lose_Pop" effect
_("\
If the attacker is a land unit and wins, and the defender is in a \
city without City Walls, the city is reduced in size by 1. (This can \
be changed with the 'killcitizen' server option.)\
"),
; "NoStackDeath" base flag
_("\
If the defender loses, and is not inside a city, fortress, or \
airbase, all other units at the defender's location may be destroyed \
along with the defender. (This can be changed with the 'killstack' \
server option.)\
")

[help_combat_example_1]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Combat example 1")
text = _("\
Suppose a Cannon (A:8, D:1, HP:20, FP:1) attacks a Musketeer \
(A:3, D:3, HP:20, FP:1) inside a city with City Walls built \
on a Forest tile.  Neither are veteran.\
"), _("\
The defender's base strength is 3.  Because it is on a Forest tile, \
its strength becomes 4.5.  It is behind City Walls, so its strength \
is tripled, to 13.5.  It is a ground unit inside a city, so its \
strength is increased to 20.25.\
"), _("\
Strength values inside the game are actually multiplied by 10, with \
fractions dropped, so the attacker's strength is 80, and the \
defender's strength is 202.\
"), _("\
Both units keep their firepower of 1 unchanged.\
"), ; /* xgettext:no-c-format */
_("\
Each round of combat, a random number between 1 and 282 is \
generated.  If the number is greater than 202 (about a 28% chance), \
the defender loses 1 hit point.  Otherwise (about a 72% chance), the \
attacker loses 1 point.\
"),
; /* Double-check my calculations....  Consider 28 rounds of combat.
; The attacker should win about 8 of them, taking 8 HP off the
; defender's 20 HP total.  The defender should win the other 20,
; killing the attacker. */
; /* xgettext:no-c-format */
_("\
Since both units have 20 hit points, the odds favor a victory for \
the defender.  The defender will probably lose somewhere around 40% \
of its hit points during the fight.  But the outcome is never \
certain as long as both units have non-zero strengths; the defender \
might emerge untouched, or it might lose most of its hit points, or \
it might even lose the battle.\
")

[help_combat_example_2]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Combat example 2")
text = _("\
Values in this example match classic ruleset, not the current \
default ruleset, civ2civ3.\
"), _("\
Suppose a veteran Battleship (A:12, D:12, HP:40, FP:2) with 3 \
movement points attacks a veteran Alpine Troops (A:5, D:5, HP:20, \
FP:1) inside a city built on a Grassland tile, with City Walls and a \
Coastal Defense.\
"), _("\
The attacker's strength is 12, raised to 18 because of veteran \
status.\
"), _("\
The defender's strength is 5, raised to 7.5 due to veteran status. \
The terrain's defense factor is 1 (no effect).  The Coastal Defense \
doubles the defender's strength to 15. (The City Walls have no \
effect against attacking sea units.) The defender is a ground \
unit inside a city, so its total strength is 22.5.\
"), _("\
Internally, the values used for attacker and defender strength are \
180 and 225, respectively.\
"), _("\
The firepower of the Battleship is set from 2 to 1.\
"), ; /* xgettext:no-c-format */
_("\
Each round, a random number from 1 to 405 is generated.  If it is \
greater than 225 (about a 44% chance) the defender loses 1 hit \
point.  Otherwise, the attacker loses 1 hit point.\
"),
; /* Please, someone double-check my probability computations! :-(
; Consider 44 rounds of combat: the Battleship should win 20 of
; them, and the Alpine Troops 24.  That's enough to kill the Alpine
; Troops (precisely to 0 hit points), and inflict 24 hit points on
; the Battleship's 40 HP total. */
; /* xgettext:no-c-format */
_("\
In this case, the odds greatly favor the attacker winning.  The \
Battleship is 25% less likely to score a hit in any given round, \
but the Battleship has twice as many hit points. The Battleship should \
expect to lose about 60% of its hit points during the fight, and should \
expect to have no movement points left.\
")

[help_counters]
name = "Counters"
text = _("Counters are currently hard-coded entity, which value could been \
tested to fire various possibilities, like allowing to build unit, or to \
enabling effect (reduce/increase production), etc. Currently only city \
counters are supported.")

[help_gen_counters]
generate = " Counters"

[help_zones_of_control]
name = _("Zones of Control")
text = _("\
Zones of Control, abbreviated as ZOC, is a game concept which \
prevents you moving freely in zones controlled (or partially \
controlled) by enemy forces.\
"), _("\
Zones of control are only enforceable on some terrain -- in the classic \
rules, only on land tiles. When ZOC applies, the general rule is that a \
unit which is adjacent to an enemy occupied tile cannot move directly to \
another tile which is also adjacent to an enemy occupied tile. An enemy \
occupied tile is one with a foreign unit of a type that imposes ZOC, \
unless you have an Alliance pact with that nation. Adjacency means any \
of the eight tiles surrounding a unit for rectangular grids, or six \
tiles for hexagonal grids.\
"), _("\
In the following special cases, units can move regardless of ZOC:\n\
- A unit moving directly into or out of a city.\n\
- A unit moving onto a tile already occupied by a friendly unit.\n\
- A unit moving to or from a terrain where ZOC cannot be enforced; \
for instance, in the classic rules, a land unit disembarking from a \
boat which is on an ocean tile.\n\
- A unit type which explicitly ignores ZOC, such as Diplomats and Spies \
in the classic rules.\
"), _("\
Notes:\
"), _("\
- ZOC does not restrict unit attacks, only movement.\
"), _("\
- Units may only impose ZOC when they are on terrain that supports it. \
Thus, units that are not native to terrain effectively cannot impose \
ZOC except for the special case where they are in a city.\
"), _("\
- An enemy city counts as an enemy occupied tile if there are \
any units inside the city, but not if the city is empty.\
"), _("\
TIP:  You can infiltrate enemy zones by first moving in a Diplomat \
(or some other unit which ignores ZOC), and then moving regular \
units onto the tile now occupied by the Diplomat. \
By repeating this process (and optionally leaving some units \
behind to keep tiles occupied), you can make a path through \
enemy territory.\
")

[help_government]
name = _("Government")
text = _("\
Your government type influences your cities' productivity and \
commerce, your citizens' happiness, and many other game factors.\
"), _("\
In the classic rules, your start out ruling your civilization \
through Despotism. As your technology improves, you can select other \
forms of government (listed below). In order to change your form of \
government, you must start a revolution. This will cause your \
civilization to undergo a period of Anarchy (lasting 1-5 turns); \
at the end of this time, you will be able to choose your new \
government.\
"), _("\
TIP 1:  Offensive military campaigns are difficult under Republican \
and Democratic governments unless you give your citizens \
lots of luxuries to keep them happy. When conquering other \
civilizations, it may be helpful to switch to one of the more \
militant styles of government.\
"), _("\
TIP 2:  Scientific advancement requires high levels of trade, which \
are much easier to achieve under Republican and Democratic \
governments. Consider switching to the Republic as soon as \
you can; gaining advanced technology early in the game puts \
you at an advantage.\
")

[help_gen_governments]
generate = " Governments"

[help_civil_war]
; /* TRANS: Preserve the leading space: it controls nesting */
name = _(" Civil War")
text = _("\
Civil war is devastating to any empire. In rulesets with civil \
war, it is triggered by the loss of your capital. Up to half of \
your cities will rebel and declare allegiance to a new (AI) leader, \
who will loot half of your treasury and retain all of your \
scientific advances.\
"), _("\
Players remain in the civil war state for just one turn, after \
which the empire enters a state of anarchy.\
"), _("\
The capture of your capital does not always lead to civil war. If \
you have treated your people with kindness, you are more likely to \
retain their loyalty. Each city that is celebrating reduces the \
chance of civil war, while each city in disorder increases the \
likelihood.\
"), _("\
In addition, the form of government directly contributes to the \
chance of civil war. Governments with universal franchise are \
far less likely to revolt than those more despotic in nature.\
"), _("\
The number of cities an empire needs before it can erupt into \
civil war is by default 10. That is, empires with fewer than 10 \
cities are immune from civil war. However, this is a server \
option ('civilwarsize'), and may vary upwards from a minimum of 6.\
")

[help_policies]
name = _("Policies")
text = _("\
Some rulesets define \"policies\". These are empire-wide settings, \
usually trade-offs similar to tax rates. If the current ruleset \
defines any policies, they are described in the following sections.\
"), _("\
You may change policy values at any time, but any changes only take \
effect at the next turn.\
")

[help_gen_policies]
generate = " Multipliers"

[help_diplomacy]
name = _("Diplomacy")
text = _("\
There are five diplomatic states between players: War, \
Cease-fire, Armistice, Peace, and Alliance. The first is the natural state, \
while the others can be achieved by signing diplomatic treaties.\
"), _("\
During War, you can freely move your units inside enemy territory and \
attack their units and cities at will.\
"), _("\
When two players decide to end hostilities between them, they can \
agree on a Cease-fire treaty. This prevents each player from \
attacking the other, but you can still move your units inside \
the other player's borders. After a set number of turns, the Cease-fire \
will lead back to War. Upon first contact with an AI player, it will \
automatically offer you a Cease-fire treaty.\
"), _("\
If you wish for a more permanent peaceful coexistence with another \
player, you may sign a peace pact. This will enter a transitional \
Armistice state, which after another set number of turns \
will turn into a permanent Peace. Breaking an Armistice will drop \
you directly back to War.\
"), _("\
At the moment two players enter into the diplomatic state of Peace, \
all military units belonging to either player that happen to be within \
the other's borders will be automatically disbanded according to the \
treaty. After this, you may not move military units into the other's \
territory until you either declare War, or forge an Alliance. Breaking \
a Peace treaty will drop you directly back to War.\
"), _("\
An Alliance is the ultimate diplomatic relationship between two players. \
In this state, you may move units into each other's cities and your units \
may share the same tile; units no longer impose zones of control. \
However, alliance treaties come with obligations; you won't be able to \
ally with a player that is at war with a current ally unless you break \
the first treaty. If one of your allies declares war on another, the \
alliance with the aggressor is automatically broken. Breaking an Alliance \
will drop you to an Armistice treaty. An allied AI player will freely \
give you its world maps and shared vision, and will seriously consider \
trading technologies and cities, but in return will expect you to join \
its wars against other players.\
")

[help_technology]
name = _("Technology")
text = _("\
Research into technology is a necessity for improving the ability of \
your civilization to develop new military units and city \
improvements.\
"), _("\
There are a few ways to gain advances from other civilizations: you \
will sometimes discover enemy technology when you capture a city; your \
agents can steal advances; wonders can provide you with technology; \
and another player might grant technology in the terms of a pact. But \
otherwise advances must be discovered through the efforts of your own \
people.\
"), _("\
Most technology progress comes from trade (see the Trade section) and, \
in the classic ruleset, from scientist specialists (see the Specialists \
section). While it is possible to change which advance you are \
currently researching, by default all progress is lost by doing so.\
"), _("\
While the majority of the resulting research output (\"bulbs\") \
usually goes toward advancing technology, in some rulesets (but not \
the classic rules), some of it may be diverted to maintain expertise in \
existing technologies; the quantity required for technology upkeep \
increases with the total research cost of all advances known to you. \
The state of advancement at which you start paying this upkeep may \
depend on factors such as your government type. If research output \
drops below that required for upkeep, your civilization will forget \
an advance, requiring it to be researched again.\
"), _("\
Technological advances can render units, city improvements, and \
wonders obsolete. While obsolete units merely become impossible for \
you to make -- leaving the ones you have already made intact -- \
obsolete improvements are immediately sold, and obsolete wonders lose \
their effect. See the relevant sections for more information.\
")

[help_gen_techs]
generate = " Techs"

[help_space_race]
name = _("Space Race")
text = _("\
The Space Race is a second option to win the game, besides \
eliminating all other civilizations. If your spaceship arrives \
first at Alpha Centauri, the game is over and you have won. \
(However it is possible for this to be disabled on the server.)\
"), _("\
In the classic rules, before you can build spaceship parts, the \
Apollo Program wonder must have been built by any player. You \
also need specific technologies to build the different spaceship \
parts: see the help texts for Space Structural, Space Component, \
and Space Module, under City Improvements. (If there are no help \
texts for these items, it probably means the 'SPACERACE' victory \
type is not enabled in the 'victories' server setting for your game.)\
"), _("\
When you have started building your spaceship, you can see it with \
the \"Spaceship\" command in the Report menu. To see spaceships of \
other players, select the player in the Nations report and click \
\"Spaceship\".\
"), _("\
If the success probability is below 100%, some fraction of the \
people on board may not survive the journey. This reduces the \
score bonus from the spaceship, but it still counts as a win.\
"), _("\
If the capital of a civilization is captured, a spaceship that has \
been launched will be lost, so defend your capital well!\
"), _("\
TIP:  If an enemy civilization has launched a spaceship, try to \
quickly build a light spaceship with many propulsion units \
that will arrive earlier. The only other option is to capture \
their capital.\
")

[help_gen_ruleset]
generate = "Ruleset"

[help_gen_tileset]
generate = "Tileset"

[help_gen_musicset]
generate = "Musicset"

[help_nations]
name = _("About Nations")
text = _("\
Each player in the game is represented by a nation. A nation can be a \
modern-day nation state, a historical state or empire, an ethnic group, \
or even a fictional nation.\
"), _("\
Nations are distinguished by their flags, leaders and city names; in \
the classic rules they are identical in all other aspects and play by \
the same rules, but other rules may have nation-specific behavior.\
")

[help_gen_nations]
generate = " Nations"

[help_connecting]
name = _("Connecting")
text = _("\
Before a game is started, anyone can connect to the server \
by supplying its hostname and port number (5556 by default). \
If the server is started with the -m flag, it will report to \
the metaserver,\
"), "\
$DefaultMetaserver\
", _("\
The client can fetch this page, too: use the Metaserver button \
in the connection dialog.  If it never shows any results, check \
whether your WWW browser is using a HTTP proxy; to make the client \
use the same proxy, before starting the client, \
set the $http_proxy environment variable to:\
"), "\
  http://proxyhost:proxyportnumber/\
", _("\
When the game has started, everyone can connect as any player who \
isn't already connected, including AI players.  Merely connecting \
to an AI player doesn't make it human controlled; this is an \
independent server setting.  If you lose connection early in \
the game and reconnect, use the name you chose for your ruler, \
not your original nickname!  If the server is reporting on the \
metaserver, the player names can be found there.\
")

[help_controls]
name = _("Controls")
; /* TRANS: This text mentions the names of some client options. These names
;  * are separately translated elsewhere; they should match! */
text = _("\
Unit Orders:\n\
============\n\
  a:      (a)uto-settler  (settler/worker units)\n\
  b:      (b)uild city  (settler units)\n\
  b:      help (b)uild wonder  (caravan units)\n\
  B:      go to and (B)uild city on target tile  (settler units)\n\
  d:      (d)o an action to the selected tile (press twice to target own tile)\n\
  d:      (d)o the action to the selected tile (when in go-to mode)\n\
  D:      (D)isband unit\n\
  E:      build airbas(e)  (airbase units)\n\
  f:      (f)ortify unit  (military units)\n\
  F:      build (f)ortress  (settler/worker units)\n\
  g:      (g)o to tile  (then left-click mouse to select target tile)\n\
  g:      add a (g)o-to waypoint  (when in go-to mode)\n\
  G:      return unit to nearest friendly city\n\
  h:      set unit's (h)omecity  (to city on current tile)\n\
  i:      build (i)rrigation  (settler/worker units)\n\
  I:      change terrain by cultivating\n\
  Ctrl+I: connect current and target tile with (I)rrigation\n\
  Ctrl+I: set an (I)rrigation waypoint  (when connecting with irrigation)\n\
  j:      drop paratrooper  (paratroop units)\n\
  l:      (l)oad unit on transporter\n\
  Ctrl+L: connect current and target tile with rai(L)\n\
  Ctrl+L: set a rai(L) waypoint  (when connecting with rail)\n\
  m:      build (m)ine  (settler/worker units)\n\
  M:      change terrain by planting\n\
  Ctrl+M: connect current and target tile with M)aglev\n\
  N:      explode (N)uclear\n\
  o:      transf(o)rm terrain  (engineer unit)\n\
  O:      c(O)nvert to another kind of unit\n\
  p:      clean (p)ollution  (settler/worker units)\n\
  P:      (P)illage  (destroy terrain alteration)\n\
  q:      patrol with unit  (then left-click mouse to select other endpoint)\n\
  q:      add a patrol waypoint  (when in patrol mode)\n\
  r:      build (r)oad/railroad  (settler/worker units)\n\
  r:      establish trade (r)oute  (caravan units)\n\
  Ctrl+R: connect current and target tile with (R)oad\n\
  Ctrl+R: set a (R)oad waypoint  (when connecting with road)\n\
  s:      (s)entry unit\n\
  S:      un(S)entry all units on tile\n\
  t:      unit go (t)o/airlift to city\n\
  T:      unload all units from (T)ransporter\n\
  u:      (u)nload unit from transporter\n\
  U:      (U)pgrade unit\n\
  x:      unit auto e(x)plore\n\
"), _("\
Unit Selection:\n\
==============\n\
  z:   select only first unit of selected group\n\
  v:   select all units on tile\n\
  V:   (on tile) select all units of the same type as the active unit\n\
  C:   (on continent) select all units of the same type as the active unit\n\
  X:   (everywhere) select all units of the same type as the active unit\n\
\n\
  w:   (w)ait: focus on next unit\n\
  5:   focus on previous unit\n\
space: done giving orders  (unit stays put)\n\
"), _("\
Unit Movement:\n\
==============\n\
  1: move south-west\n\
  2: move south\n\
  3: move south-east\n\
  4: move west\n\
  6: move east\n\
  7: move north-west\n\
  8: move north\n\
  9: move north-east\n\
"), _("\
Main Map (Keys):\n\
================\n\
  Some clients support zooming/scaling the map graphics with the + and - keys.\n\
  Some clients support audio volume control with Shift-+ and Shift-- keys.\n\
  c:            (c)enter view on active unit\n\
  Shift-home:   center view on capital\n\
  Shift-arrows: scroll map\n\
\n\
  Ctrl-B: show/hide national borders\n\
  Ctrl-D: show/hide city trade routes\n\
  Ctrl-G: show/hide map grid lines\n\
  Ctrl-N: show/hide city names\n\
  Ctrl-P: show/hide city production\n\
  Ctrl-O: show/hide city growth\n\
  Ctrl-V: show/hide city output values\n\
  Ctrl-Y: show/hide city outlines\n\
"), _("\
Main Map (Mouse):\n\
=================\n\
  Left-click on city:            Pop up city dialog\n\
  Left-click on unit:            Select a single unit\n\
                                 (cancels any current activity if \"clear\n\
                                 unit orders on selection\" is set)\n\
  Shift-left-click on unit:      Add unit to selection (GTK)\n\
  Left-click-and-drag on unit:   Go-to command for unit\n\
                                 (if \"keyboardless goto\" enabled in options)\n\
  Center-click, Alt-left-click:  Show tile info\n\
  Right-click:                   Center tile in view\n\
  Ctrl-center-click:             Wake up sentried units\
"), _("\
  Quick unit selection:\n\
  =====================\n\
  Ctrl-left-click on tile:       Select a sea unit (prefers transporters)\n\
  Ctrl-right-click on tile:      Select a land unit (prefers military)\n\
\n\
  These combinations choose and select a single unit from those on a tile. \
All other things being equal, units which have movement points left are \
preferred. If keyboardless goto is enabled, dragging allows the unit to be \
selected and moved in one gesture.\
"), _("\
  City manipulation (GTK):\n\
  ========================\n\
  Shift-Ctrl-left-click:         Adjust city workers\n\
  Shift-Alt-right-click:         Show city workers (mouse over or near city)\n\
  Shift-right-click:             Copy production (from city or unit)\n\
  Shift-Ctrl-right-click:        Paste production into city\
"), _("\
  Area Selection mode (GTK):\n\
  ==========================\n\
  Right-click-and-drag:          Select units/cities by area\n\
  Shift-right-click-and-drag:    Append area contents to existing selection\n\
\n\
  In this mode, multiple units and/or cities are selected. If the selection \
rectangle contains any cities, and \"Select cities before units\" is set in \
the options, only the cities are selected and the current unit selection is \
left alone; otherwise, both cities and units are selected.\n\
\n\
  Selected cities are highlighted on the map and in the Cities report for \
further mass actions. Immediately after selecting, the set of cities can be \
adjusted by left-clicking on individual cities; and the production for all \
the highlighted cities can be changed with Shift-Ctrl-right-click (see \
previous section). Right-clicking leaves this mode.\
"), _("\
  Chatline (GTK):\n\
  ===============\n\
  ' (apostrophe):                Focus chatline\n\
  Ctrl-Alt-right-click:          Paste city or tile link into chatline\n\
  Shift-Ctrl-Alt-right-click:    Paste unit link into chatline\n\
\n\
  These controls allow map elements to be referred to in chat. See the \
Chatline help for more details.\n\
"), _("\
Overview Map (Mouse):\n\
=====================\n\
  Left-click, Shift-left-click, and Right-click have the same functions as \
they do on the main map.\n\
"), _("\
Dialogs and Reports:\n\
====================\n\
     F1: show Map View\n\
     F2: open Units Report\n\
     F3: open Nations Report\n\
     F4: open Cities Report\n\
     F5: open Economy Report\n\
     F6: open Research Report\n\
     F7: open World Wonders\n\
     F8: open Top Cities\n\
     F9: open Messages dialog\n\
    F11: open Demographics\n\
    F12: open Spaceship\n\
\n\
    Ctrl-F:       open Find City dialog\n\
    Shift-Ctrl-L: open Worklists dialog\n\
    Ctrl-T:       open Tax/Lux/Sci Rates dialog\n\
    Shift-Ctrl-G: open Revolution dialog\n\
    Shift-Ctrl-I: open Infrapoints dialog\n\
    Shift-Ctrl-R: open Rally point dialog\n\
\n\
Shift-Return: Turn done\n\
"), _("\
Editing Mode (GTK):\n\
===================\n\
    Ctrl-E:       toggle editing mode\n\
    Ctrl-Shift-W: toggle fog of war in editing mode\n\
"), _("\
Battle Groups (GTK & Qt):\n\
====================\n\
    Four Battle Groups are supported, controlled by F1, F2, F3, and F4.\n\
    Ctrl-F?:       Assign selected units as a Battle Group\n\
    Ctrl-Shift-F?: Add selected units to a Battle Group\n\
    Shift-F?:      Select a Battle Group\n\
")

[help_governor]
name = _("Citizen Governor")
text = _("\
The Citizen Governor (formerly called the CMA) helps you manage your cities. \
It deploys the available workers on the free tiles around the \
city to achieve maximal city output. It also changes workers to \
specialists, if appropriate. And the governor has another ability: \
whenever possible, it keeps your cities content.\
"), _("\
There are various means to tell the governor what kind of output you \
would like. Open the city window and click on the governor tab. There \
are two kinds of sliders: On the left, you can set a Minimal \
Surplus for each kind of production; e.g. Gold = +3 means the city \
earns 3 gold more than it needs to upkeep its improvements. On the \
right, the sliders let you define by how much you prefer one kind \
of production to another; setting science to 3 means you prefer a \
single bulb to three shields (or gold, trade,...). You can set \
different factors for each kind of production, according to your \
needs.\
"), _("\
If you set up some Minimal Surpluses which are impossible to fulfill, \
the governor can't be activated. Whenever the governor can't fulfill its task \
in the ongoing game, it passes back control to you. So you'd better \
not define too high a surplus; instead, use factors to achieve your \
goals.\
"), _("\
The Celebrate checkbox lets your city - celebrate. This will work \
only with a high luxury rate. See help about 'Happiness'.\
"), _("\
Clicking on 'Control city' puts the city under control of \
the governor, 'Release city' passes control back to you.\
"), _("\
For ease of use, you can save your slider setting as a preset \
with a name. Click on 'add preset' and enter a name for your \
setting. You can use this preset in every city by just clicking \
on its name. Also, you can control your setting from within the \
city report, in the governor column. And you can change it from there \
(use 'change' --> 'Citizen Governor'), if you have saved it as a preset.\
"), _("\
Use 'Game' --> 'Options' --> 'Save Settings' to store your presets \
permanently.\
"), _("\
But beware! If you use the governor for some of your cities, you will \
encounter some difficulties with managing cities nearby, by hand. \
It's best to manage all cities on an island either by hand or by \
governor. Read more hints, some background information, and some \
preset examples in the file README.governor, included with Freeciv.\
")

[help_chatline]
name = _("Chatline")
text = _("\
The client has a primitive chat interface. The lines you type are \
sent to all players, or only to your allies if the client is configured \
for that, except:\
"), _("\
  - Messages starting with '/' are interpreted as server commands \
and executed, if you have the required access level.\
"), _("\
  - Messages starting with 'John:' are private messages to 'John'. \
Names can be abbreviated, or surrounded with double-quotes if they \
have spaces. The server looks for players named 'John' and if that \
fails tries to match a username beginning with 'John' (like 'Johnathan').\
"), _("\
  - Messages starting with 'John::' are private messages as above, but \
will match only users (not players) named 'John'. A user name 'Johnathan' \
will still be matched.\
"), _("\
  - Messages starting with ':' will be sent to everyone (even if your \
client is configured to send only to allies by default).\
"), _("\
  - Messages starting with '.' will be sent only to all your allies (or, \
if you're a global observer, only to other global observers).\
"), _("\
Featured text (GTK):\n\
====================\n\
\n\
Since 2.2, the GTK client has featured text support.  This feature allows \
users to format the chat messages they are sending using boldface, italic, \
colors, links, etc...  Such changes are performed using escape sequences.\
"), _("\
* Getting boldface:\n\
Full name sequence: '[bold] ... [/bold]'\n\
Abbreviation sequence: '[b] ... [/b]'\n\
Short cut in the entry: Ctrl-B\n\
Example: '[b]bold[/b]' will display the word 'bold' in bold style.\
"), _("\
* Getting colors:\n\
Full name sequence: '[color] ... [/color]' \n\
Abbreviation sequence: '[c] ... [/c]'\n\
Short cut in the entry: Ctrl-C (you also need to select the color in the \
toolbar over the entry)\n\
The color start sequence always takes at least one of the following \
parameters:\n\
- 'foreground' (abbreviation 'fg'): a color name such as red, or a hex \
specification such as #3050b2 or #35b.\n\
- 'background' (abbreviation 'bg'): same as above.\n\
Example: '[c fg=\"blue\" bg=\"yellow\"]color[/c]' will display the word \
'color' in blue on a yellow background.\
"), _("\
* Getting italic:\n\
Full name sequence: '[italic] ... [/italic]'\n\
Abbreviation sequence: '[i] ... [/i]'\n\
Short cut in the entry: Ctrl-I\n\
Example: '[i]italic[/i]' will display the word 'italic' in italic style.\
"), _("\
* Getting strikethrough:\n\
Full name sequence: '[strike] ... [/strike]'\n\
Abbreviation sequence: '[s] ... [/s]'\n\
Short cut in the entry: Ctrl-S\n\
Example: '[s]strikethrough[/s]' will display the word 'strikethrough' with \
a strike.\
"), _("\
* Getting underline:\n\
Full name sequence: '[underline] ... [/underline]'\n\
Abbreviation sequence: '[u] ... [/u]'\n\
Short cut in the entry: Ctrl-U\n\
Example: '[u]underlined[/u]' will display the word 'underlined' with an \
underline.\
"), _("\
* Getting city links:\n\
Full name sequence: '[link target=\"city\"] ... [/link]'\n\
Abbreviation sequence: '[l tgt=\"city\"] ... [/l]'\n\
Short cut: Control-Alt-Right-click on a city on the map.\n\
The 'id' parameter must be set to the id of the city you are pointing.\n\
An optional 'name' parameter can be set to bind the city name in the case \
the destination users don't know this city on their map.\n\
This expression can also be started and finished within the same pair of \
brackets, like '[link target=\"city\" id=121 /]' (note the slash at the \
end).\n\
Examples: '[l tgt=\"city\" id=65]city[/l]' will make the word 'city' \
clickable and pointing to the city id 65.\n\
'[l tgt=\"city\" id=65 name=\"noname\" /]' will display the name of the \
city id 65 if known, else, the word 'noname'.\
"), _("\
* Getting tile links:\n\
Full name sequence: '[link target=\"tile\"] ... [/link]'\n\
Abbreviation sequence: '[l tgt=\"tile\"] ... [/l]'\n\
Short cut: Control-Alt-Right-click on a tile without city on the map.\n\
The 'x' and 'y' parameters must be set to the tile location you are \
pointing.\n\
This expression can also be started and finished within the same pair of \
brackets, like '[link target=\"tile\" x=5 y=36 /]' (note the slash at the \
end).\n\
Example: '[l tgt=\"tile\" x=17 y=3]this tile[/l]' will make the string \
'this tile' clickable and pointing to the tile (17, 3).\
"), _("\
* Getting unit links:\n\
Full name sequence: '[link target=\"unit\"] ... [/link]'\n\
Abbreviation sequence: '[l tgt=\"unit\"] ... [/l]'\n\
Short cut: Shift-Control-Alt-Right-click on a unit on the map.\n\
The 'id' parameter must be set to the id of the unit you are pointing to.  \
An optional 'name' parameter can be set to bind the unit name in the case \
the destination users don't know this unit on their map.\n\
This expression can also be started and finished within the same pair of \
brackets, like '[link target=\"unit\" id=109 /]' (note the slash at the \
end).\n\
Examples: '[l tgt=\"unit\" id=235]unit[/l]' will make the word 'unit' \
clickable and pointing to the unit id 235.\n\
'[l tgt=\"unit\" id=235 name=\"Warrior\" /]' will display the name of the \
unit id 235 if known, else, the word 'Warrior'.\
"), _("\
Of course, the different escape sequences can be combined in the same \
sentence, like '[i][c fg=\"blue\"]this [b]is [s]funny[c bg=\"green\"] \
[u]to[/i] test[/b] this[/s] [/c]new[/u] feature[/c]'.\
")

[help_worklist_editor]
name = _("Worklist Editor")
text = _("\
The worklist editor is used to edit both worklists for each city (from the \
city dialog) and global worklists. Using this editor you can create lists \
specifying what to build in the turns to come.\
"), _("\
To add an item to the worklist, double-click the desired item in the list \
of available items. You can also press the Help button to get help on the \
selected item. Pressing Help with no item selected will display this page.\
"), _("\
To remove an item from the worklist simply double-click the item to remove. \
Use the buttons below the worklist to move items up and/or down in the list.\
"), _("\
Keyboard shortcuts: Home to focus the worklist, End to focus the available \
list, Up/Down arrows to select previous/next item \
in worklist or available list, PageUp/Down to move items up/down \
in the worklist, Insert to insert items from the available list into \
the worklist and Delete to delete the selected item from the worklist.\
"), _("\
If you want to buy the unit that's first on the list, you can do that \
from the City Overview window.\
")

[help_languages]
name = _("Languages")
text = _("\
Freeciv supports several local languages.  See the Native \
Language Support section of the README file for instructions \
on how to use one of these languages.\
\n\n\
First, check whether a localization is already in progress \
for your language:\
"), "\
  https://www.freeciv.org/wiki/Translations\
", _("\
If you would like to add a localization (translation) for your \
language, please see the instructions at:\
"), "\
  https://www.freeciv.org/wiki/Localization\
", _("\
You are also welcome to send any questions to the translation \
mailing list:\
"), "\
  freeciv-i18n_at_freelists.org\
"

[help_copying]

; Note: GPL text is _deliberately_ not i18n-marked.
; We may want to do something (eg, include FSF-authorised translations
; as well as English where appropriate?) but not simply bundle with
; other translations.  Would be nicer to have means to just keep
; COPYING itself in datadir, and slurp from there into help somehow...

name = _("Copying")
text = _("\
Freeciv is released under the GNU General Public License (version 2 \
or, at your option, any later version).  In short, you may copy this \
program (including source) freely, but see the full license text \
below for full details.\
"), "\
                    GNU GENERAL PUBLIC LICENSE\n\
                       Version 2, June 1991\n\
\n\
 Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n\
 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\
 Everyone is permitted to copy and distribute verbatim copies\n\
 of this license document, but changing it is not allowed.\n\
\n\
                              Preamble\n\
", "\
  The licenses for most software are designed to take away your \
freedom to share and change it.  By contrast, the GNU General Public \
License is intended to guarantee your freedom to share and change \
free software--to make sure the software is free for all its users. \
This General Public License applies to most of the Free Software \
Foundation's software and to any other program whose authors commit \
to using it.  (Some other Free Software Foundation software is \
covered by the GNU Lesser General Public License instead.)  You can \
apply it to your programs, too.\
", "\
  When we speak of free software, we are referring to freedom, not \
price.  Our General Public Licenses are designed to make sure that \
you have the freedom to distribute copies of free software (and \
charge for this service if you wish), that you receive source code \
or can get it if you want it, that you can change the software or \
use pieces of it in new free programs; and that you know you can do \
these things.\
", "\
  To protect your rights, we need to make restrictions that forbid \
anyone to deny you these rights or to ask you to surrender the \
rights.  These restrictions translate to certain responsibilities \
for you if you distribute copies of the software, or if you modify \
it.\
", "\
  For example, if you distribute copies of such a program, whether \
gratis or for a fee, you must give the recipients all the rights \
that you have.  You must make sure that they, too, receive or can \
get the source code.  And you must show them these terms so they \
know their rights.\
", "\
  We protect your rights with two steps: (1) copyright the software, \
and (2) offer you this license which gives you legal permission to \
copy, distribute and/or modify the software.\
", "\
  Also, for each author's protection and ours, we want to make \
certain that everyone understands that there is no warranty for this \
free software.  If the software is modified by someone else and \
passed on, we want its recipients to know that what they have is not \
the original, so that any problems introduced by others will not \
reflect on the original authors' reputations.\
", "\
  Finally, any free program is threatened constantly by software \
patents.  We wish to avoid the danger that redistributors of a free \
program will individually obtain patent licenses, in effect making \
the program proprietary.  To prevent this, we have made it clear \
that any patent must be licensed for everyone's free use or not \
licensed at all.\
", "\
  The precise terms and conditions for copying, distribution and \
modification follow.\
", "\
                     GNU GENERAL PUBLIC LICENSE\n\
   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION \
", "\
  0. This License applies to any program or other work which \
contains a notice placed by the copyright holder saying it may be \
distributed under the terms of this General Public License.  The \
\"Program\", below, refers to any such program or work, and a \"work \
based on the Program\" means either the Program or any derivative \
work under copyright law: that is to say, a work containing the \
Program or a portion of it, either verbatim or with modifications \
and/or translated into another language.  (Hereinafter, translation \
is included without limitation in the term \"modification\".)  Each \
licensee is addressed as \"you\".\
", "\
Activities other than copying, distribution and modification are not \
covered by this License; they are outside its scope.  The act of \
running the Program is not restricted, and the output from the \
Program is covered only if its contents constitute a work based on \
the Program (independent of having been made by running the \
Program).  Whether that is true depends on what the Program does.\
", "\
  1. You may copy and distribute verbatim copies of the Program's \
source code as you receive it, in any medium, provided that you \
conspicuously and appropriately publish on each copy an appropriate \
copyright notice and disclaimer of warranty; keep intact all the \
notices that refer to this License and to the absence of any \
warranty; and give any other recipients of the Program a copy of \
this License along with the Program.\
", "\
You may charge a fee for the physical act of transferring a copy, \
and you may at your option offer warranty protection in exchange for \
a fee.\
", "\
  2. You may modify your copy or copies of the Program or any \
portion of it, thus forming a work based on the Program, and copy \
and distribute such modifications or work under the terms of Section \
1 above, provided that you also meet all of these conditions:\
", "\
    a) You must cause the modified files to carry prominent notices \
stating that you changed the files and the date of any change.\
", "\
    b) You must cause any work that you distribute or publish, that \
in whole or in part contains or is derived from the Program or \
any part thereof, to be licensed as a whole at no charge to all \
third parties under the terms of this License.\
", "\
    c) If the modified program normally reads commands interactively \
when run, you must cause it, when started running for such \
interactive use in the most ordinary way, to print or display an \
announcement including an appropriate copyright notice and a \
notice that there is no warranty (or else, saying that you \
provide a warranty) and that users may redistribute the program \
under these conditions, and telling the user how to view a copy \
of this License.  (Exception: if the Program itself is \
interactive but does not normally print such an announcement, \
your work based on the Program is not required to print an \
announcement.)\
", "\
These requirements apply to the modified work as a whole.  If \
identifiable sections of that work are not derived from the Program, \
and can be reasonably considered independent and separate works in \
themselves, then this License, and its terms, do not apply to those \
sections when you distribute them as separate works.  But when you \
distribute the same sections as part of a whole which is a work \
based on the Program, the distribution of the whole must be on the \
terms of this License, whose permissions for other licensees extend \
to the entire whole, and thus to each and every part regardless of \
who wrote it.\
", "\
Thus, it is not the intent of this section to claim rights or \
contest your rights to work written entirely by you; rather, the \
intent is to exercise the right to control the distribution of \
derivative or collective works based on the Program.\
", "\
In addition, mere aggregation of another work not based on the \
Program with the Program (or with a work based on the Program) on a \
volume of a storage or distribution medium does not bring the other \
work under the scope of this License.\
", "\
  3. You may copy and distribute the Program (or a work based on it, \
under Section 2) in object code or executable form under the terms \
of Sections 1 and 2 above provided that you also do one of the \
following:\
", "\
    a) Accompany it with the complete corresponding machine-readable \
source code, which must be distributed under the terms of \
Sections 1 and 2 above on a medium customarily used for software \
interchange; or,\
", "\
    b) Accompany it with a written offer, valid for at least three \
years, to give any third party, for a charge no more than your \
cost of physically performing source distribution, a complete \
machine-readable copy of the corresponding source code, to be \
distributed under the terms of Sections 1 and 2 above on a \
medium customarily used for software interchange; or,\
", "\
    c) Accompany it with the information you received as to the \
offer to distribute corresponding source code.  (This \
alternative is allowed only for noncommercial distribution and \
only if you received the program in object code or executable \
form with such an offer, in accord with Subsection b above.)\
", "\
The source code for a work means the preferred form of the work for \
making modifications to it.  For an executable work, complete source \
code means all the source code for all modules it contains, plus any \
associated interface definition files, plus the scripts used to \
control compilation and installation of the executable.  However, as \
a special exception, the source code distributed need not include \
anything that is normally distributed (in either source or binary \
form) with the major components (compiler, kernel, and so on) of the \
operating system on which the executable runs, unless that component \
itself accompanies the executable.\
", "\
If distribution of executable or object code is made by offering \
access to copy from a designated place, then offering equivalent \
access to copy the source code from the same place counts as \
distribution of the source code, even though third parties are not \
compelled to copy the source along with the object code.\
", "\
  4. You may not copy, modify, sublicense, or distribute the Program \
except as expressly provided under this License.  Any attempt \
otherwise to copy, modify, sublicense or distribute the Program is \
void, and will automatically terminate your rights under this \
License.  However, parties who have received copies, or rights, from \
you under this License will not have their licenses terminated so \
long as such parties remain in full compliance.\
", "\
  5. You are not required to accept this License, since you have not \
signed it.  However, nothing else grants you permission to modify or \
distribute the Program or its derivative works.  These actions are \
prohibited by law if you do not accept this License.  Therefore, by \
modifying or distributing the Program (or any work based on the \
Program), you indicate your acceptance of this License to do so, and \
all its terms and conditions for copying, distributing or modifying \
the Program or works based on it.\
", "\
  6. Each time you redistribute the Program (or any work based on \
the Program), the recipient automatically receives a license from \
the original licensor to copy, distribute or modify the Program \
subject to these terms and conditions.  You may not impose any \
further restrictions on the recipients' exercise of the rights \
granted herein.  You are not responsible for enforcing compliance by \
third parties to this License.\
", "\
  7. If, as a consequence of a court judgement or allegation of \
patent infringement or for any other reason (not limited to patent \
issues), conditions are imposed on you (whether by court order, \
agreement or otherwise) that contradict the conditions of this \
License, they do not excuse you from the conditions of this License. \
If you cannot distribute so as to satisfy simultaneously your \
obligations under this License and any other pertinent obligations, \
then as a consequence you may not distribute the Program at all. \
For example, if a patent license would not permit royalty-free \
redistribution of the Program by all those who receive copies \
directly or indirectly through you, then the only way you could \
satisfy both it and this License would be to refrain entirely from \
distribution of the Program.\
", "\
If any portion of this section is held invalid or unenforceable \
under any particular circumstance, the balance of the section is \
intended to apply and the section as a whole is intended to apply in \
other circumstances.\
", "\
It is not the purpose of this section to induce you to infringe any \
patents or other property right claims or to contest validity of any \
such claims; this section has the sole purpose of protecting the \
integrity of the free software distribution system, which is \
implemented by public license practices.  Many people have made \
generous contributions to the wide range of software distributed \
through that system in reliance on consistent application of that \
system; it is up to the author/donor to decide if he or she is \
willing to distribute software through any other system and a \
licensee cannot impose that choice.\
", "\
This section is intended to make thoroughly clear what is believed \
to be a consequence of the rest of this License.\
", "\
  8. If the distribution and/or use of the Program is restricted in \
certain countries either by patents or by copyrighted interfaces, \
the original copyright holder who places the Program under this \
License may add an explicit geographical distribution limitation \
excluding those countries, so that distribution is permitted only in \
or among countries not thus excluded.  In such case, this License \
incorporates the limitation as if written in the body of this \
License.\
", "\
  9. The Free Software Foundation may publish revised and/or new \
versions of the General Public License from time to time.  Such new \
versions will be similar in spirit to the present version, but may \
differ in detail to address new problems or concerns.\
", "\
Each version is given a distinguishing version number.  If the \
Program specifies a version number of this License which applies to \
it and \"any later version\", you have the option of following the \
terms and conditions either of that version or of any later version \
published by the Free Software Foundation.  If the Program does not \
specify a version number of this License, you may choose any version \
ever published by the Free Software Foundation.\
", "\
  10. If you wish to incorporate parts of the Program into other \
free programs whose distribution conditions are different, write to \
the author to ask for permission.  For software which is copyrighted \
by the Free Software Foundation, write to the Free Software \
Foundation; we sometimes make exceptions for this.  Our decision \
will be guided by the two goals of preserving the free status of all \
derivatives of our free software and of promoting the sharing and \
reuse of software generally.\
", "\
                             NO WARRANTY\
", "\
  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO \
WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. \
EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR \
OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY \
KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, \
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \
PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND \
PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE \
DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR \
CORRECTION.\
", "\
  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN \
WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY \
AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU \
FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR \
CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE \
PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING \
RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A \
FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF \
SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF \
SUCH DAMAGES.\
", "\
                      END OF TERMS AND CONDITIONS\n\
                          ------------------\
"

[help_about]
name = _("About Freeciv")
text = "\
$FreecivVersion\
",
; /* TRANS: followed by a URL */
_("\
If you find any bugs, then please send us a bug report.  This is \
best done by visiting the Freeciv Bug Tracking System, at:\
"), "\
  https://redmine.freeciv.org/projects/freeciv\
", _("\
Please quote the above version information. \
For more information about submitting bug reports see the file BUGS \
in the Freeciv distribution.\
"), _("\
To contact the developers about anything else, please email one of the \
project's mailing lists:\
"), _("\
    freeciv-dev_at_freelists.org   - public development mailing\n\
                                     list (archives are public)\n\
    freeciv-private_at_lists.sourceforge.net\n\
                                   - private project administration\n\
                                     list (for security issues, etc)\
"), _("\
  Original authors:\n\
    (they are no longer involved, please don't mail them!)\
"), "\
    Allan Ove Kjeldbjerg - allan_at_daimi.aau.dk\n\
    Claus Leth Gregersen - leth_at_daimi.aau.dk\n\
    Peter Joachim Unold  - pjunold_at_daimi.aau.dk\
", _("\
  Present administrators: \
"), "\
    Marko Lindqvist       - cazfi74_at_gmail.com\n\
    Jacob Nevins          - 0jacobnk.fca_at_chiark.greenend.org.uk\n\
    Sveinung Kvilhaugsvik - sveinung84_at_users.sourceforge.net\n\
    Alina Lenk            - alina.v.lenk_at_gmail.com\n\
    Dean Brown            - ddeanbrown_at_comcast.net\
", _("\
For more information in general, visit the Freeciv website, at:\
"), "\
  https://www.freeciv.org/\
"
